openapi: 3.0.3
info:
  title: Blog API
  description: Blog API documentation
  contact: {}
  license:
    name: unlicensed
  version: 0.0.1
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/huubang-hanu/blog1/0.0.1
  - url: http://localhost:8080
    description: Inferred Url
tags:
  - name: account-resource
    description: Account Resource
  - name: auth-info-resource
    description: Auth Info Resource
  - name: blog-post-resource
    description: Blog Post Resource
  - name: category-resource
    description: Category Resource
  - name: logout-resource
    description: Logout Resource
  - name: public-user-resource
    description: Public User Resource
  - name: user-resource
    description: User Resource
paths:
  /api/account:
    get:
      tags:
        - account-resource
      summary: getAccount
      operationId: getAccountUsingGET
      parameters:
        - name: name
          in: query
          required: false
          style: form
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AdminUserDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/authenticate:
    get:
      tags:
        - account-resource
      summary: isAuthenticated
      operationId: isAuthenticatedUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/auth-info:
    get:
      tags:
        - auth-info-resource
      summary: getAuthInfo
      operationId: getAuthInfoUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthInfoVM'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/blog-posts:
    get:
      tags:
        - blog-post-resource
      summary: getAllBlogPosts
      operationId: getAllBlogPostsUsingGET
      parameters:
        - name: page
          in: query
          description: Page number of the requested page
          required: false
          style: form
          allowReserved: true
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: Size of a page
          required: false
          style: form
          allowReserved: true
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          style: form
          allowReserved: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BlogPost'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - blog-post-resource
      summary: createBlogPost
      operationId: createBlogPostUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlogPost'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BlogPost'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/blog-posts/{id}:
    get:
      tags:
        - blog-post-resource
      summary: getBlogPost
      operationId: getBlogPostUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BlogPost'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - blog-post-resource
      summary: updateBlogPost
      operationId: updateBlogPostUsingPUT
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlogPost'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BlogPost'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - blog-post-resource
      summary: deleteBlogPost
      operationId: deleteBlogPostUsingDELETE
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    patch:
      tags:
        - blog-post-resource
      summary: partialUpdateBlogPost
      operationId: partialUpdateBlogPostUsingPATCH
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlogPost'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/BlogPost'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BlogPost'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /api/categories:
    get:
      tags:
        - category-resource
      summary: getAllCategories
      operationId: getAllCategoriesUsingGET
      parameters:
        - name: page
          in: query
          description: Page number of the requested page
          required: false
          style: form
          allowReserved: true
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: Size of a page
          required: false
          style: form
          allowReserved: true
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          style: form
          allowReserved: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - category-resource
      summary: createCategory
      operationId: createCategoryUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Category'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/categories/{id}:
    get:
      tags:
        - category-resource
      summary: getCategory
      operationId: getCategoryUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Category'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - category-resource
      summary: updateCategory
      operationId: updateCategoryUsingPUT
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Category'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - category-resource
      summary: deleteCategory
      operationId: deleteCategoryUsingDELETE
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    patch:
      tags:
        - category-resource
      summary: partialUpdateCategory
      operationId: partialUpdateCategoryUsingPATCH
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Category'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /api/logout:
    post:
      tags:
        - logout-resource
      summary: logout
      operationId: logoutUsingPOST
      parameters:
        - name: claims
          in: query
          required: false
          style: form
          schema:
            type: object
        - name: tokenValue
          in: query
          required: false
          style: form
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/authorities:
    get:
      tags:
        - public-user-resource
      summary: getAuthorities
      operationId: getAuthoritiesUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/users:
    get:
      tags:
        - public-user-resource
      summary: getAllPublicUsers
      operationId: getAllPublicUsersUsingGET
      parameters:
        - name: page
          in: query
          description: Page number of the requested page
          required: false
          style: form
          allowReserved: true
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: Size of a page
          required: false
          style: form
          allowReserved: true
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          style: form
          allowReserved: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/admin/users:
    get:
      tags:
        - user-resource
      summary: getAllUsers
      operationId: getAllUsersUsingGET
      parameters:
        - name: page
          in: query
          description: Page number of the requested page
          required: false
          style: form
          allowReserved: true
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: Size of a page
          required: false
          style: form
          allowReserved: true
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          style: form
          allowReserved: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdminUserDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/admin/users/{login}:
    get:
      tags:
        - user-resource
      summary: getUser
      operationId: getUserUsingGET
      parameters:
        - name: login
          in: path
          description: login
          required: true
          style: simple
          schema:
            pattern: ^(?>[a-zA-Z0-9!$&*+=?^_`{|}~.-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*)|(?>[_.@A-Za-z0-9-]+)$
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AdminUserDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          
security:
  - OAuth2:
      - openid
##  - BasicAuth: []
#  - ApiKeyAuth: []

  
            
components:
  securitySchemes:
      OAuth2:
        type: oauth2
        flows:
          authorizationCode:
            authorizationUrl: http://localhost:9080/auth/realms/jhipster/protocol/openid-connect/auth
            tokenUrl: http://localhost:9080/auth/realms/jhipster/protocol/openid-connect/token
            scopes:
              openid: openid
  schemas:
    AdminUserDTO:
      title: AdminUserDTO
      required:
        - login
      type: object
      properties:
        activated:
          type: boolean
        authorities:
          uniqueItems: true
          type: array
          items:
            type: string
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        email:
          maxLength: 254
          minLength: 5
          type: string
        firstName:
          maxLength: 50
          minLength: 0
          type: string
        id:
          type: string
        imageUrl:
          maxLength: 256
          minLength: 0
          type: string
        langKey:
          maxLength: 10
          minLength: 2
          type: string
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        lastName:
          maxLength: 50
          minLength: 0
          type: string
        login:
          maxLength: 50
          minLength: 1
          pattern: ^(?>[a-zA-Z0-9!$&*+=?^_`{|}~.-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*)|(?>[_.@A-Za-z0-9-]+)$
          type: string
    AuthInfoVM:
      title: AuthInfoVM
      type: object
      properties:
        clientId:
          type: string
        issuer:
          type: string
    BlogPost:
      title: BlogPost
      required:
        - slug
        - title
      type: object
      properties:
        category:
          $ref: '#/components/schemas/Category'
        createdAt:
          type: string
          format: date-time
        createdBy:
          type: string
        description:
          type: string
        fullContent:
          type: string
        id:
          type: integer
          format: int64
        image:
          type: string
          format: byte
        imageContentType:
          type: string
        lastModifiedAt:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        publishedAt:
          type: string
          format: date-time
        slug:
          type: string
        tags:
          type: string
        title:
          type: string
    Category:
      title: Category
      required:
        - name
        - slug
      type: object
      properties:
        blogPosts:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/BlogPost'
        id:
          type: integer
          format: int64
        name:
          type: string
        ordering:
          type: integer
          format: int32
        slug:
          maxLength: 80
          minLength: 0
          type: string
    UserDTO:
      title: UserDTO
      type: object
      properties:
        id:
          type: string
        login:
          type: string